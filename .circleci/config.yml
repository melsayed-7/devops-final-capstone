version: 2.1
orbs:
  aws-eks: circleci/aws-eks@1.0.3

jobs:
  lint:
    docker:
      - image: python:3.8-buster

    working_directory: ~/repo

    steps:
    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "requirements.txt" }}
        - v1-dependencies-

    - run:
        name: install dependencies
        command: |
          #apk add --no-cache git make bash
          python3 -m venv venv
          . venv/bin/activate
          make install

    - save_cache:
        paths:
        - ./venv
        key: v1-dependencies-{{ checksum "requirements.txt" }}

    - run:
        name: run lint
        command: |
          . venv/bin/activate
          make lint 


  docker-build:
    docker:
    working_directory: ~/repo
    machine: true
    steps:
    - checkout
    # - run:
    #     name: build docker image
    #     command: |
    #       docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PSWD}
    #       docker build -t melsayed7/devops-capstone:${CIRCLE_WORKFLOW_ID:0:7} .


    # - run:
    #     name: push docker image
    #     command: |
    #       docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PSWD}
    #       docker push melsayed7/devops-capstone:${CIRCLE_WORKFLOW_ID:0:7}

    - run:
        name: test response
        command: |
            # docker run -d --rm --name fastapi -p 8000:80 melsayed7/devops-capstone:${CIRCLE_WORKFLOW_ID:0:7}
            docker run -d  -p 8000:80 melsayed7/devops-capstone:${CIRCLE_WORKFLOW_ID:0:7}
            sleep 5
            docker container ls
            export url="http://localhost:8000"
            export response=$(curl -s $url)

            echo "Response: {$response}"

            if [[ $response == *"Moustafa"* ]]; then
              docker stop fastapi
            else
              docker stop fastapi
              exit 1
            fi
  # create-deployment:
  #   executor: aws-eks/python3
  #   parameters:
  #     cluster-name:
  #       description: |
  #         Name of the EKS cluster
  #       type: string
  #   steps:
  #     - checkout
  #     - kubernetes/install
  #     - aws-eks/update-kubeconfig-with-authenticator:
  #         cluster-name: << parameters.cluster-name >>
  #         install-kubectl: true
  #     - kubernetes/create-or-update-resource:
  #         get-rollout-status: true
  #         resource-file-path: deployment.yml
  #         resource-name: deployment/devops-capstone

  k8s-deploy:
    docker:
      - image: amazon/aws-cli
    steps:
    - checkout
    - run:
        name: deploy to k8s cluster
        command: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          aws eks update-kubeconfig --region ${AWS_DEFAULT_REGION} --name udacity-capstone
          chmod +x kubectl
          ./kubectl set image deployment/devops-capstone  capstone=melsayed7/devops-capstone:${CIRCLE_WORKFLOW_ID:0:7}


workflows:
  default:
    jobs:
      # - lint
      - docker-build
          # requires: [lint]
      - k8s-deploy:
          requires: [docker-build]
